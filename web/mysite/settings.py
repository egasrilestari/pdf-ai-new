"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
import pymysql
from mysite.logger import LOGGING

pymysql.install_as_MySQLdb()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-rl#a86(3o%csb4xfd_gt9%_z%bdjn==(s_r)q18ud9v@vj-55r"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# Aktifin 404 page not found
# DEBUG = False

# localhost
# ALLOWED_HOSTS = ["localhost", "127.0.0.1"]
# Railway
ALLOWED_HOSTS = ["web-production-6d1a2.up.railway.app"]
LOGGING = LOGGING

# kalau pakai custom domain nanti, tambahkan domain itu juga.
CSRF_TRUSTED_ORIGINS = [
    "https://web-production-6d1a2.up.railway.app",
]

# Django log viewer
LOG_VIEWER_FILES_DIR = "logs"
LOG_VIEWER_PAGE_LENGTH = 25
LOG_VIEWER_MAX_READ_LINES = 1000


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "polls",
    "log_viewer",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "mysite.middleware.LoginRequiredMiddleware",
]

# LOGGING = {
#     "version": 1,
#     "disable_existing_loggers": False,
#     "formatters": {
#         "main_formatter": {
#             "format": "{asctime} - {levelname} - {module} - {message}",
#             "style": "{",
#         }
#     },
#     "handlers": {
#         "console": {
#             "class": "logging.StreamHandler",
#             "formatter": "main_formatter",
#         },
#         "file": {
#             "class": "logging.FileHandler",
#             "filename": "info.log",
#             "formatter": "main_formatter",
#         },
#     },
#     "loggers": {
#         "main": {
#             "handlers": ["file", "console"],
#             "propagate": True,
#             "level": "INFO",
#         },
#         "django": {
#             "handlers": ["console"],
#             "propagate": True,
#         },
#     },
# }

ROOT_URLCONF = "mysite.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "mysite.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# default django database
# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.sqlite3",
#         "NAME": BASE_DIR / "db.sqlite3",
#     }
# }

# dev (alpha database)
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "dev_dytiket",
        "USER": "dev_dytiket",
        "PASSWORD": "dev_dytiket",
        "HOST": "db-prs.ctygcefk5lty.ap-southeast-3.rds.amazonaws.com",
        "PORT": "7777",
    }
}
# local database
# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.mysql",
#         "NAME": "tiket-local",
#         "USER": "root",
#         "PASSWORD": "",
#         "HOST": "127.0.0.1",
#         "PORT": "3306",
#     },
#     "ifra": {
#         "ENGINE": "django.db.backends.mysql",
#         "NAME": "ifra_local",
#         "USER": "root",
#         "PASSWORD": "",
#         "HOST": "127.0.0.1",
#         "PORT": "3306",
#     },
#     "ipa": {
#         "ENGINE": "django.db.backends.mysql",
#         "NAME": "ipa_25_local",
#         "USER": "root",
#         "PASSWORD": "",
#         "HOST": "127.0.0.1",
#         "PORT": "3306",
#     },
# }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

STATICFILES_DIRS = [
    BASE_DIR / "polls/files",
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

DATA_UPLOAD_MAX_MEMORY_SIZE = 10485760

# Session django
SESSION_ENGINE = "django.contrib.sessions.backends.db"

# Maksimal durasi sesi tanpa aktivitas (dalam detik)
SESSION_COOKIE_AGE = 1800  # 30 menit

# Reset timer setiap ada aktivitas
SESSION_SAVE_EVERY_REQUEST = True

# Media files (user-uploaded content)
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"
